<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:SharpFlow.Desktop.ViewModels"
        xmlns:models="using:SharpFlow.Desktop.Models"
		xmlns:controls="using:SharpFlow.Desktop.Controls"
		x:Class="SharpFlow.Desktop.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Title="SharpFlow - Workflow Designer"
        WindowStartupLocation="CenterScreen"
        Width="1200" Height="800">

	<DockPanel LastChildFill="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
		<!-- Toolbar -->
		<Border DockPanel.Dock="Top" Background="#2D2D30" Padding="10">
			<StackPanel Orientation="Horizontal" Spacing="10">
				<Button Command="{Binding AddHttpNodeCommand}"
                        Background="#28a745" Foreground="White"
                        Content="🌐 Add HTTP Request" />
				<Button Command="{Binding AddTimerNodeCommand}"
                        Background="#ffc107" Foreground="Black"
                        Content="⏰ Add Timer" />
				<Button Command="{Binding ClearNodesCommand}"
                        Background="#dc3545" Foreground="White"
                        Content="🗑️ Clear All" />
				<TextBlock Text="SharpFlow MVP - GO SHARP WITH THE FLOW! 🚀"
                           Foreground="White"
                           VerticalAlignment="Center"
                           Margin="20,0"
                           FontWeight="Bold" />
			</StackPanel>
		</Border>

		<!-- Debug Toolbar -->
		<Border DockPanel.Dock="Bottom" Background="Black" Width="150" Padding="10" ClipToBounds="False">
			<controls:DebugToolbar />
		</Border>

		<!-- Left Sidebar, just trying things to learn in this section here. :-D -->
		<Border DockPanel.Dock="Left" Background="Black" Width="150" Padding="10">
			<StackPanel Spacing="10">
				<TextBlock Text="Workflow Nodes" FontWeight="Bold" Foreground="Black" FontSize="16" />
				<Button Command="{Binding AddHttpNodeCommand}" Content="Add HTTP Node" />
				<Button Command="{Binding AddTimerNodeCommand}" Content="Add Timer Node" />
				<Button Command="{Binding ClearNodesCommand}" Content="Clear All Nodes" />
				<UserControl/>
			</StackPanel>
		</Border>
		
		<!-- Property Panel -->
		<Border DockPanel.Dock="Right" Background="#252526" Width="300" Padding="10">
			<StackPanel Spacing="10">
				<TextBlock Text="Properties" FontWeight="Bold" Foreground="White" FontSize="16" />

				<Border Background="#3C3C3C" Padding="10" CornerRadius="5"
                        IsVisible="{Binding SelectedNode, Converter={x:Static ObjectConverters.IsNotNull}}">
					<StackPanel Spacing="8" x:DataType="models:WorkflowNode">
						<TextBlock Text="{Binding Name}"
                                   FontWeight="Bold" Foreground="White" />
						<TextBlock Text="{Binding Type}"
                                   Foreground="LightGray" />
						<TextBlock Text="{Binding Id}"
                                   Foreground="LightBlue" FontSize="10" />
						<!-- ADD THIS: Display Properties dictionary -->
						<TextBlock Text="Properties:" FontWeight="Bold" Foreground="White" Margin="0,10,0,5" />
						<ItemsControl ItemsSource="{Binding Properties}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<StackPanel Orientation="Horizontal" Spacing="5">
										<TextBlock Text="{Binding Key}" Foreground="LightBlue" />
										<TextBlock Text=":" Foreground="Gray" />
										<TextBlock Text="{Binding Value}" Foreground="White" />
									</StackPanel>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>
				</Border>

				<TextBlock Text="👆 Click on a workflow node to see its properties"
                          Foreground="Gray"
                          IsVisible="{Binding SelectedNode, Converter={x:Static ObjectConverters.IsNull}}" />
			</StackPanel>
		</Border>

		<!--BorderBrush="{Binding IsSelected, Converter={StaticResource SelectionColorConverter}}"-->

		<!-- Main Canvas Area -->
		<Border Background="#1E1E1E" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
			<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="False">
				<Canvas x:Name="NodeCanvas" Background="Gray" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="10000" Height="10000">
					<ItemsControl ItemsSource="{Binding Nodes}" ClipToBounds="False">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="models:WorkflowNode">
								<Border
								  BorderBrush="Red"
								  Width="150" Height="80"
								  CornerRadius="5"
								  BorderThickness="2"
								  Background="{Binding Type, Converter={StaticResource NodeColorConverter}}"
								  Cursor="Hand"
								  PointerPressed="Node_PointerPressed"
								  PointerMoved="Node_PointerMoved"
								  PointerReleased="Node_PointerReleased"
								  Canvas.Left="{Binding X}"
								  Canvas.Top="{Binding Y}">
									<StackPanel>
										<TextBlock Text="{Binding Name}" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center" />
										<TextBlock Text="{Binding Type}" Foreground="LightGray" HorizontalAlignment="Center" />
										<TextBlock Text="{Binding X, StringFormat='X:{0}'}" Foreground="Yellow" HorizontalAlignment="Center" />
										<TextBlock Text="{Binding Y, StringFormat='Y:{0}'}" Foreground="Yellow" HorizontalAlignment="Center" />
									</StackPanel>
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Canvas>
			</ScrollViewer>
		</Border>
	</DockPanel>
</Window>